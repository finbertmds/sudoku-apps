name: Android Internal Github (Classic)

on:
  push:
    branches:
      - master
    paths:
      - 'apps/classic/android/**'
      - 'apps/classic/app/**'
      - 'apps/classic/assets/**'
      - 'apps/classic/i18n/**'
      - 'apps/classic/theme/**'
      - 'apps/classic/types/**'
      - 'apps/classic/utils/**'
      - 'apps/classic/app.config.ts'

jobs:
  check-changes:
    name: Check Code Changes
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.filter.outputs.should_run }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Determine diff range
        id: sha-range
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "base_sha=${{ github.event.pull_request.base.sha }}" >> $GITHUB_OUTPUT
            echo "head_sha=${{ github.event.pull_request.head.sha }}" >> $GITHUB_OUTPUT
          else
            echo "base_sha=${{ github.event.before }}" >> $GITHUB_OUTPUT
            echo "head_sha=${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

      - name: Get changed files
        id: get-changes
        run: |
          changed_files=$(git diff --name-only ${{ steps.sha-range.outputs.base_sha }} ${{ steps.sha-range.outputs.head_sha }})
          echo "$changed_files" > changed.txt
          echo "Changed files:"
          cat changed.txt

      - name: Check affected paths
        id: filter
        run: |
          if grep -q '^packages/' changed.txt; then
            echo "Changes in packages/** detected → skip workflow"
            echo "should_run=false" >> $GITHUB_OUTPUT
          elif grep -qE '^(apps/classic/)' changed.txt; then
            echo "Changes in apps/classic/** → continue"
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            echo "No relevant changes → skip"
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi

  build:
    name: Run Classic Build
    needs: check-changes
    if: needs.check-changes.outputs.should_run == 'true'
    runs-on: macos-14
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if packages/** changed
        id: check-packages
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^packages/'; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Cancel if packages changed
        if: steps.check-packages.outputs.changed == 'true'
        run: |
          echo "Changes detected in packages/**. Skipping workflow."
          exit 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Decode keystore
        run: |
          echo "$C_ANDROID_KEYSTORE_BASE64" | base64 --decode > apps/classic/android/app/sudoku-key.keystore
          echo "$C_PLAY_STORE_KEY_BASE64" | base64 --decode > apps/classic/android/fastlane/play-store-key.json
        env:
          C_ANDROID_KEYSTORE_BASE64: ${{ secrets.C_ANDROID_KEYSTORE_BASE64 }}
          C_PLAY_STORE_KEY_BASE64: ${{ secrets.C_PLAY_STORE_KEY_BASE64 }}

      - name: Install dependencies
        run: |
          yarn install

      - name: Install fastlane (global)
        run: |
          sudo gem install fastlane
          fastlane --version

      - name: Run Fastlane classic internal_github (Android)
        run: |
          cd apps/classic/android
          fastlane internal_github
        env:
          APP_PACKAGE_NAME: ${{ secrets.C_APP_PACKAGE_NAME }}
          UNSPLASH_ACCESS_KEY: ${{ secrets.C_UNSPLASH_ACCESS_KEY }}
          AD_UNIT_BANNER_ANDROID: ${{ secrets.C_AD_UNIT_BANNER_ANDROID }}
          AD_UNIT_INTERSTITIAL_ANDROID: ${{ secrets.C_AD_UNIT_INTERSTITIAL_ANDROID }}
          AD_UNIT_REWARDED_ANDROID: ${{ secrets.C_AD_UNIT_REWARDED_ANDROID }}
          AD_UNIT_REWARDED_I_ANDROID: ${{ secrets.C_AD_UNIT_REWARDED_I_ANDROID }}
          AD_UNIT_BANNER_IOS: ${{ secrets.C_AD_UNIT_BANNER_IOS }}
          AD_UNIT_INTERSTITIAL_IOS: ${{ secrets.C_AD_UNIT_INTERSTITIAL_IOS }}
          AD_UNIT_REWARDED_IOS: ${{ secrets.C_AD_UNIT_REWARDED_IOS }}
          AD_UNIT_REWARDED_I_IOS: ${{ secrets.C_AD_UNIT_REWARDED_I_IOS }}
